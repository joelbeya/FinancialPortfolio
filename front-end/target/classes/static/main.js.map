{"version":3,"sources":["./src/environments/environment.ts","./src/app/shared/market.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/market/market-list/market-list.component.ts","./src/app/market/market-list/market-list.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/app/shared/giphy.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MarketService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  getAllMarket(): Observable<any> {\n    return this.httpClient.get('//localhost:8080/api/markets');\n  }\n}\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Financial Portfolio';\n}\n","<mat-toolbar>\n  <button aria-label=\"Example icon-button with menu icon\" class=\"example-icon\" mat-icon-button>\n    <mat-icon>menu</mat-icon>\n  </button>\n  <span>Welcome to the {{ title }}</span>\n  <span class=\"example-spacer\"></span>\n  <button aria-label=\"Example icon-button with heart icon\" class=\"example-icon favorite-icon\" mat-icon-button>\n    <mat-icon>favorite</mat-icon>\n  </button>\n  <button aria-label=\"Example icon-button with share icon\" class=\"example-icon\" mat-icon-button>\n    <mat-icon>share</mat-icon>\n  </button>\n</mat-toolbar>\n\n<div>\n  <h1>Ã‰ternel est bon</h1>\n</div>\n\n<app-market-list></app-market-list>\n\n<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\nimport {MarketService} from '../../shared/market.service';\nimport {GiphyService} from '../../shared/giphy.service';\n\n@Component({\n  selector: 'app-market-list',\n  templateUrl: './market-list.component.html',\n  styleUrls: ['./market-list.component.scss']\n})\nexport class MarketListComponent implements OnInit {\n\n  markets: Array<any>;\n  displayedColumns: string[] = ['id', 'name', 'change', 'sell', 'buy'];\n\n  constructor(\n    private marketService: MarketService,\n    private giphyService: GiphyService\n  ) { }\n\n  ngOnInit(): void {\n    this.marketService.getAllMarket().subscribe(data => {\n      this.markets = data;\n      console.log(this.markets);\n      for (const market of this.markets) {\n        this.giphyService.get(market.name).subscribe(url => market.giphyUrl = url);\n      }\n    });\n  }\n\n}\n","<table [dataSource]=\"markets\" class=\"mat-elevation-z18\" mat-table>\n\n  <!--- Note that these columns can be defined in any order.\n        The actual rendered columns are set as a property on the row definition\" -->\n\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"id\">\n    <th *matHeaderCellDef mat-header-cell> No.</th>\n    <td *matCellDef=\"let element\" mat-cell> {{element.id}} </td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"name\">\n    <th *matHeaderCellDef mat-header-cell> Name</th>\n    <td *matCellDef=\"let element\" mat-cell>\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-around center\" fxLayoutGap=\"5%\">\n        <img alt=\"{{element.name}}\" class=\"customImg\" src=\"{{element.giphyUrl}}\">\n        <span fxFlex>{{element.name}}</span>\n      </div>\n    </td>\n  </ng-container>\n\n  <!-- Change Column -->\n  <ng-container matColumnDef=\"change\">\n    <th *matHeaderCellDef mat-header-cell> Change</th>\n    <td *matCellDef=\"let element\" mat-cell> {{element.change}} </td>\n  </ng-container>\n\n  <!-- Sell Column -->\n  <ng-container matColumnDef=\"sell\">\n    <th *matHeaderCellDef mat-header-cell> Sell</th>\n    <td *matCellDef=\"let element\" mat-cell> {{element.sell}} </td>\n  </ng-container>\n\n  <!-- Buy Column -->\n  <ng-container matColumnDef=\"buy\">\n    <th *matHeaderCellDef mat-header-cell> Buy</th>\n    <td *matCellDef=\"let element\" mat-cell> {{element.buy}} </td>\n  </ng-container>\n\n  <tr *matHeaderRowDef=\"displayedColumns\" mat-header-row></tr>\n  <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\n</table>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {HttpClientModule} from '@angular/common/http';\nimport {MarketListComponent} from './market/market-list/market-list.component';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatListModule} from '@angular/material/list';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatSortModule} from '@angular/material/sort';\nimport {FlexLayoutModule} from '@angular/flex-layout';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MarketListComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatButtonModule,\n    MatCardModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatTableModule,\n    MatSortModule,\n    MatToolbarModule,\n    FlexLayoutModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {map} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GiphyService {\n\n  // This is a Giphy API Key I created. Create your own at https://developers.giphy.com/dashboard/?create=true.\n  giphyApi = '//api.giphy.com/v1/gifs/search?api_key=61BtMvu7FV4OvBBUqEC2GFf3j9src9J9&limit=1&q=';\n\n  constructor(public httpClient: HttpClient) {\n  }\n\n  get(searchTerm): any {\n    const apiLink = this.giphyApi + searchTerm;\n    return this.httpClient.get(apiLink).pipe(map((response: any) => {\n      if (response.data.length > 0) {\n        return response.data[0].images.original.url;\n      } else {\n        return 'https://media.giphy.com/media/YaOxRsmrv9IeA/giphy.gif'; // dancing cat for 404\n      }\n    }));\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}